void testGetEnumDescription()
{
	string description = GetEnumDescription(MyEnum.HereIsAnother);
	Console.WriteLine($"Name = {MyEnum.HereIsAnother.ToString()}, des = {description}, value = {(int)MyEnum.HereIsAnother}");


	int colIndex = GetEnumValue<MyEnum>("HereIsAnother");
	Console.WriteLine($"colIndex = {colIndex}");
}


public enum MyEnum
{
	[Description("My name is")]
	Name1 = 1,

	[Description("Here is another")]
	HereIsAnother,

	[Description("Last one")]
	LastOne
}

public static string GetEnumDescription(Enum value)
{
	FieldInfo fi = value.GetType().GetField(value.ToString());
	DescriptionAttribute[] attributes = fi.GetCustomAttributes(typeof(DescriptionAttribute), false) as DescriptionAttribute[];
	if (attributes != null && attributes.Any())
	{
		return attributes.First().Description;
	}
	return value.ToString();
}

public static int GetEnumValue<T>(string itemName)
{
	Array dgvColList = Enum.GetValues(typeof(T));
	foreach (var item in dgvColList)
	{
		Console.WriteLine($"col name= {item}, value = {(int)item}");
		if (itemName == item.ToString()) return (int)item;
	}
	return -1;
}